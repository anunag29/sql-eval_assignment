question,query,db_name
What is the level wise diversity ratio for account id 1245?,"SELECT level, COUNT(*) AS total_employees, COUNT(*) FILTER (WHERE gender = 'Male') AS male_count, COUNT(*) FILTER (WHERE gender = 'Female') AS female_count, COUNT(*) FILTER (WHERE gender NOT IN ('Male', 'Female')) AS other_gender_count, CASE WHEN COUNT(*) > 0 THEN ROUND(COUNT(*) FILTER (WHERE gender = 'Female')::decimal / COUNT(*), 2) ELSE 0 END AS female_ratio, CASE WHEN COUNT(*) > 0 THEN ROUND(COUNT(*) FILTER (WHERE gender = 'Male')::decimal / COUNT(*), 2) ELSE 0 END AS male_ratio, CASE WHEN COUNT(*) > 0 THEN ROUND(COUNT(*) FILTER (WHERE gender NOT IN ('Male', 'Female'))::decimal / COUNT(*), 2) ELSE 0 END AS other_gender_ratio FROM employees WHERE account_id = 1245 GROUP BY level ORDER BY level;",crux_assign
What is the trend of diversity ratio since 2020 for account id 2875,"SELECT EXTRACT( YEAR FROM date_of_joining ) AS year, ROUND( COUNT( CASE WHEN gender = 'Female' THEN 1 END )::NUMERIC / COUNT( CASE WHEN gender = 'Male' THEN 1 END ), 2 ) AS diversity_ratio FROM employees WHERE account_id = 2875 AND date_of_joining >= '2020-01-01' GROUP BY year ORDER BY year;",crux_assign
What is the Attrition by manager for 2023 for account id 1245?,"SELECT managers.id AS manager_id, managers.full_name AS manager_name, COUNT(employees.id) AS total_reportees, COUNT(CASE WHEN EXTRACT(YEAR FROM employees.date_of_exit) = 2023 THEN 1 ELSE NULL END) AS attrition_count FROM employees managers LEFT JOIN employees ON employees.manager_id = managers.id WHERE managers.account_id = 1245 GROUP BY managers.id, managers.full_name HAVING COUNT(employees.manager_id) > 0;",crux_assign
What is the Attrition by Grade for account id 1245?,"SELECT level AS grade, COUNT(*) AS total_employees, COUNT(date_of_exit) AS attrition_count FROM employees WHERE account_id = 1245 GROUP BY level ORDER BY level;",crux_assign
What is the Attrition by Role for account id 1245?,"SELECT title AS role, COUNT(*) AS total_employees, COUNT(date_of_exit) AS attrition_count FROM employees WHERE account_id = 1245 GROUP BY title ORDER BY title;",crux_assign
What is the Attrition by Tenure for account id 1245?,"WITH TenureData AS ( SELECT date_of_joining, date_of_exit, EXTRACT(YEAR FROM AGE(COALESCE(date_of_exit, CURRENT_DATE), date_of_joining)) AS tenure_years FROM employees WHERE account_id = 1245),TenureGroups AS ( SELECT CASE WHEN tenure_years < 1 THEN 'Less than 1 year' WHEN tenure_years >= 1 AND tenure_years < 2 THEN '1-2 years' WHEN tenure_years >= 2 AND tenure_years < 5 THEN '2-5 years' WHEN tenure_years >= 5 AND tenure_years < 10 THEN '5-10 years' WHEN tenure_years >= 10 THEN 'More than 10 years' ELSE 'Unknown' END AS tenure_group, (date_of_exit IS NOT NULL) AS has_exited FROM TenureData) SELECT tenure_group, COUNT(*) AS total_employees, SUM(CASE WHEN has_exited THEN 1 ELSE 0 END) AS attrition_count FROM TenureGroups GROUP BY tenure_group ORDER BY CASE WHEN tenure_group = 'Less than 1 year' THEN 1 WHEN tenure_group = '1-2 years' THEN 2 WHEN tenure_group = '2-5 years' THEN 3 WHEN tenure_group = '5-10 years' THEN 4 WHEN tenure_group = 'More than 10 years' THEN 5 ELSE 6 END;",crux_assign
What is the engagement trend of each department for account id 1245?,"SELECT dp.name AS departmentName, s.id AS scheduleId, AVG(r.nps_score) AS score FROM responses r JOIN employee_chats ec ON r.employee_chat_id = ec.id JOIN employees e ON e.id = ec.employee_id JOIN schedules s ON s.id = ec.schedule_id JOIN departments dp ON dp.id = e.department_id JOIN questions q ON q.id = r.question_id JOIN drivers d ON d.id = q.driver_id WHERE e.account_id = 1245 AND d.key = 'engagement' AND q.question_type = 'nps' GROUP BY dp.name, s.id ORDER BY dp.name, s.id;",crux_assign
What is the span of control of the organisation for account id 10,"WITH ManagerCounts AS ( SELECT manager_id FROM employees WHERE account_id = 10 AND manager_id IS NOT NULL GROUP BY manager_id),TotalDirectReports AS ( SELECT COUNT(*) AS total_direct_reports FROM employees WHERE account_id = 10 AND manager_id IS NOT NULL),TotalManagers AS ( SELECT COUNT(*) AS total_managers FROM ManagerCounts) SELECT total_direct_reports::FLOAT / total_managers AS average_span_of_control FROM TotalDirectReports, TotalManagers;",crux_assign
Which team has the highest attrition for account id 1245?,"WITH DepartmentEmployees AS ( SELECT department_id, department_name, COUNT(*) FILTER (WHERE date_of_joining < '2024-01-01'::timestamp AND (date_of_exit IS NULL OR date_of_exit > '2023-01-01'::timestamp)) AS StartingEmployees, COUNT(*) FILTER (WHERE date_of_joining >= '2023-01-01'::timestamp AND date_of_joining < '2024-01-01'::timestamp) AS NewHires, COUNT(*) FILTER (WHERE date_of_exit >= '2023-01-01'::timestamp AND date_of_exit < '2024-01-01'::timestamp) AS Exits FROM employees WHERE account_id = 1245 AND (date_of_joining < '2024-01-01'::timestamp OR date_of_exit BETWEEN '2023-01-01'::timestamp AND '2023-12-31'::timestamp) GROUP BY department_id, department_name) SELECT department_id, department_name, StartingEmployees, NewHires, Exits, CASE WHEN (StartingEmployees + NewHires) = 0 THEN NULL ELSE ROUND((Exits::NUMERIC / (StartingEmployees + NewHires)) * 100, 2) END AS AttritionPercentage FROM DepartmentEmployees;",crux_assign
What is the headcount trend by employment type for Tremblay Inc(10)?,"WITH yearly_trend AS ( SELECT EXTRACT(YEAR FROM date_of_joining) AS year, employment_type, COUNT(CASE WHEN date_of_joining IS NOT NULL THEN 1 END) AS join_count, COUNT(CASE WHEN date_of_exit IS NOT NULL THEN 1 END) AS exit_count FROM employees WHERE account_id = 10 GROUP BY EXTRACT(YEAR FROM date_of_joining), employment_type) SELECT year, employment_type, SUM(join_count - exit_count) OVER (PARTITION BY employment_type ORDER BY year) AS headcount_trend FROM yearly_trend ORDER BY employment_type, year;",crux_assign
Can you break down the attrition rate by manager for Tremblay Inc(10)?,"SELECT m.full_name AS manager_name, COUNT(CASE WHEN e.date_of_exit IS NOT NULL THEN 1 END) AS exit_count, COUNT(*) AS total_employees, ROUND(COUNT(CASE WHEN e.date_of_exit IS NOT NULL THEN 1 END) * 100.0 / COUNT(*), 2) AS attrition_rate FROM employees e JOIN employees m ON e.manager_id = m.id WHERE e.account_id = 10 GROUP BY m.full_name;",crux_assign
What is the annual attrition trend at Tremblay Inc(10)?,"WITH yearly_trend AS ( SELECT EXTRACT(YEAR FROM date_of_exit) AS year, COUNT(CASE WHEN date_of_exit IS NOT NULL THEN 1 END) AS exit_count FROM employees WHERE account_id = 10 AND EXTRACT(YEAR FROM date_of_exit) IS NOT NULL GROUP BY EXTRACT(YEAR FROM date_of_exit)) SELECT year, SUM(exit_count) AS exit_trend FROM yearly_trend GROUP by YEAR ORDER BY year;",crux_assign
"List all employees along with their current goals, the corresponding goal cycle, and progress percentage:","SELECT e.full_name, g.title, gc.name as cycle_name, gp.progress_percent FROM employees e JOIN employee_goals eg ON e.id = eg.employee_id JOIN goals g ON eg.goal_id = g.id JOIN goal_cycles gc ON g.goal_cycle_id = gc.id JOIN goal_progresses gp ON g.id = gp.goal_id WHERE g.discarded_at IS NULL AND gp.discarded_at IS NULL;",crux_assign
Find the average progress percentage of goals by goal type for a specific year,"SELECT g.goal_type, AVG(gp.progress_percent) AS avg_progress FROM goals g JOIN goal_progresses gp ON g.id = gp.goal_id JOIN goal_cycles gc ON g.goal_cycle_id = gc.id WHERE gc.year = '2022' AND g.discarded_at IS NULL AND gp.discarded_at IS NULL GROUP BY g.goal_type;",crux_assign
Get the top 5 departments with the highest number of goals set for a particular cycle,"SELECT d.name, COUNT(g.id) AS goals_count FROM departments d JOIN goals_departments gd ON d.id = gd.department_id JOIN goals g ON gd.goal_id = g.id JOIN goal_cycles gc ON g.goal_cycle_id = gc.id WHERE gc.name = 'Annual' AND d.active = TRUE AND g.discarded_at IS NULL GROUP BY d.name ORDER BY goals_count DESCLIMIT 5;",crux_assign
List employees who have not updated their goals since a specific date,"SELECT e.full_name, g.title, MAX(ga.checkin_time) AS last_checkin FROM employees e JOIN employee_goals eg ON e.id = eg.employee_id JOIN goals g ON eg.goal_id = g.id JOIN goal_activities ga ON g.id = ga.goal_id WHERE ga.checkin_time < '2023-01-01' AND g.discarded_at IS NULL GROUP BY e.full_name, g.title HAVING MAX(ga.checkin_time) IS NOT NULL;",crux_assign
Identify goals that have been reassigned from one department to another,"SELECT g.title, orig_d.name AS original_department, new_d.name AS new_department FROM goals g JOIN goals_departments gd_orig ON g.id = gd_orig.goal_id JOIN departments orig_d ON gd_orig.department_id = orig_d.id JOIN goals_departments gd_new ON g.id = gd_new.goal_id JOIN departments new_d ON gd_new.department_id = new_d.id WHERE orig_d.id != new_d.id AND g.discarded_at IS NULL;",crux_assign
Calculate the percentage of goals achieved per department for the last quarter,"SELECT d.name, COALESCE(SUM(CASE WHEN gp.progress_status = 4 THEN 1 ELSE 0 END) * 100.0 / COUNT(gp.id), 0) AS percent_achieved FROM departments d JOIN goals_departments gd ON d.id = gd.department_id JOIN goals g ON gd.goal_id = g.id JOIN goal_progresses gp ON g.id = gp.goal_id JOIN goal_cycles gc ON g.goal_cycle_id = gc.id WHERE gc.cycle = 'quarterly' AND gc.year = '2023' AND gc.name = 'Q1' AND d.active = TRUE AND g.discarded_at IS NULL GROUP BY d.name;",crux_assign
Calculate the percentage of employees who are goal admins and their average goal achievement,"SELECT AVG(gp.progress_percent) AS avg_achievement, COUNT(e.id) AS total_goal_admins FROM employees e JOIN employee_goals eg ON e.id = eg.employee_id JOIN goals g ON eg.goal_id = g.id JOIN goal_progresses gp ON g.id = gp.goal_id WHERE e.goal_admin = TRUE AND g.discarded_at IS NULL AND gp.discarded_at IS NULL;",crux_assign
Determine the role-based distribution of goals within the company,"SELECT e.org_role, COUNT(g.id) AS goals_count FROM employees e JOIN employee_goals eg ON e.id = eg.employee_id JOIN goals g ON eg.goal_id = g.id WHERE g.discarded_at IS NULL GROUP BY e.org_role;",crux_assign
